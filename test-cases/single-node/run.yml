---
# vim:ft=ansible:
- name: Checkout and setup automation for single node
  hosts:
    - "tag_Name_{{automation_name}}_automation_runner"
  tasks:
    - name: remove previous automation
      file: path={{automation_dir}}-single-node-{{tested_version}}-{{automation_os}} state=absent
    - name: checkout automation repositories
      git: "repo=https://github.com/RedHatQE/pulp-automation dest={{automation_dir}}-single-node-{{tested_version}}-{{automation_os}} version=devel force=yes"
      #TODO: ugly! copy remote-remote
    - name: fetch pubkey for copying to other hosts
      fetch: src=/root/.ssh/test_rsa.pub dest=./ flat=yes

- name: Configure inventory
  hosts:
    - "tag_Name_{{automation_name}}_automation_runner"
  roles:
    - {role: single-inventory-config, path: "single-node-{{tested_version}}-{{automation_os}}", producer_node: single_node, consumer_node: single_node}
    - {role: pulp-run-setup, path: "single-node-{{tested_version}}-{{automation_os}}"}
    
- name: Configure single node 
  hosts:
    - "tag_Name_{{automation_name}}_{{tested_version|replace('.','_')}}_{{automation_os}}_single_node"
  tasks:
    - name: ensure automation_runner is between authorized hosts
      authorized_key: user=root key="{{ lookup('file', 'test_rsa.pub') }}"
    - name: temporarily disable SE linux on feodra 22
      selinux: policy=targeted state=permissive
      when: "ansible_distribution=='Fedora' and ansible_distribution_version|int==22"

- name: Clean pulp 
  hosts:
    - "tag_Name_{{automation_name}}_{{tested_version|replace('.','_')}}_{{automation_os}}_single_node"
  roles:
    - cleanup-pulp


- name: Run automation from automation runner
  hosts:
    - "tag_Name_{{automation_name}}_automation_runner"
  tasks:
    - name: remove public key from local dir 
      local_action: file path=./test_rsa.pub state=absent
    - name: copy certificate file to automation runner
      command: "scp -o StrictHostKeyChecking=no -i /root/.ssh/test_rsa root@{{hostvars[groups['tag_Name_'+automation_name+'_'+tested_version|replace('.','_')+'_'+automation_os+'_single_node'][0]]['ec2_public_dns_name']}}{{':'}}/etc/pki/tls/certs/myca.crt /etc/pki/tls/certs/"
    - name: run all tests on single node
      command: "chdir={{automation_dir}}-single-node-{{tested_version}}-{{automation_os}} nosetests --with-xunit"
      ignore_errors: True
    - name: fetch file with results
      fetch: "src={{automation_dir}}-single-node-{{tested_version}}-{{automation_os}}/nosetests.xml dest={{inventory_dir}}/results-single-node-{{tested_version}}-{{automation_os}}.xml flat=yes"
